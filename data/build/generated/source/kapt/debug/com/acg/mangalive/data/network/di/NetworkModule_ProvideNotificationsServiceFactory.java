// Generated by Dagger (https://dagger.dev).
package com.acg.mangalive.data.network.di;

import com.acg.mangalive.data.network.NotificationsService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import kotlinx.serialization.json.Json;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideNotificationsServiceFactory implements Factory<NotificationsService> {
  private final NetworkModule module;

  private final Provider<Json> jsonProvider;

  public NetworkModule_ProvideNotificationsServiceFactory(NetworkModule module,
      Provider<Json> jsonProvider) {
    this.module = module;
    this.jsonProvider = jsonProvider;
  }

  @Override
  public NotificationsService get() {
    return provideNotificationsService(module, jsonProvider.get());
  }

  public static NetworkModule_ProvideNotificationsServiceFactory create(NetworkModule module,
      Provider<Json> jsonProvider) {
    return new NetworkModule_ProvideNotificationsServiceFactory(module, jsonProvider);
  }

  public static NotificationsService provideNotificationsService(NetworkModule instance,
      Json json) {
    return Preconditions.checkNotNullFromProvides(instance.provideNotificationsService(json));
  }
}
