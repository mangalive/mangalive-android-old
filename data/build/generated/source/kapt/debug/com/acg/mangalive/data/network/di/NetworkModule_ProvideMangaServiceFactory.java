// Generated by Dagger (https://dagger.dev).
package com.acg.mangalive.data.network.di;

import com.acg.mangalive.data.network.MangaService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import kotlinx.serialization.json.Json;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideMangaServiceFactory implements Factory<MangaService> {
  private final NetworkModule module;

  private final Provider<Json> jsonProvider;

  public NetworkModule_ProvideMangaServiceFactory(NetworkModule module,
      Provider<Json> jsonProvider) {
    this.module = module;
    this.jsonProvider = jsonProvider;
  }

  @Override
  public MangaService get() {
    return provideMangaService(module, jsonProvider.get());
  }

  public static NetworkModule_ProvideMangaServiceFactory create(NetworkModule module,
      Provider<Json> jsonProvider) {
    return new NetworkModule_ProvideMangaServiceFactory(module, jsonProvider);
  }

  public static MangaService provideMangaService(NetworkModule instance, Json json) {
    return Preconditions.checkNotNullFromProvides(instance.provideMangaService(json));
  }
}
