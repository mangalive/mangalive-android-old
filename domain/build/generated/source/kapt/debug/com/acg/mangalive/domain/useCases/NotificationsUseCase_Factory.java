// Generated by Dagger (https://dagger.dev).
package com.acg.mangalive.domain.useCases;

import com.acg.mangalive.domain.repository.NotificationsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationsUseCase_Factory implements Factory<NotificationsUseCase> {
  private final Provider<NotificationsRepository> notificationsRepositoryProvider;

  public NotificationsUseCase_Factory(
      Provider<NotificationsRepository> notificationsRepositoryProvider) {
    this.notificationsRepositoryProvider = notificationsRepositoryProvider;
  }

  @Override
  public NotificationsUseCase get() {
    return newInstance(notificationsRepositoryProvider.get());
  }

  public static NotificationsUseCase_Factory create(
      Provider<NotificationsRepository> notificationsRepositoryProvider) {
    return new NotificationsUseCase_Factory(notificationsRepositoryProvider);
  }

  public static NotificationsUseCase newInstance(NotificationsRepository notificationsRepository) {
    return new NotificationsUseCase(notificationsRepository);
  }
}
